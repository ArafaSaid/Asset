@model IEnumerable<Asset.Models.hdAssets>

@{
    ViewData["Title"] = "IT Assets Management";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-6 fw-bold text-primary">
                <i class="bi bi-laptop me-2"></i>IT Assets Management
            </h1>
            <p class="text-muted">Manage and track all hardware assets</p>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-circle me-2"></i>Add New Asset
            </a>
            <a asp-action="ExportCsv" class="btn btn-outline-info btn-lg ms-2">
                <i class="bi bi-download me-2"></i>Export CSV
            </a>
            <form asp-action="ImportCsv" method="post" enctype="multipart/form-data" class="d-inline">
                <label class="btn btn-outline-success btn-lg ms-2 mb-0">
                    <i class="bi bi-upload me-2"></i>Import CSV
                    <input type="file" name="file" accept=".csv,.xlsx" style="display:none" onchange="this.form.submit()" />
                </label>
            </form>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Total Assets</h6>
                    <h3 class="fw-bold text-primary">@Model.Count()</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Active</h6>
                    <h3 class="fw-bold text-success">@Model.Count(a => a.Status?.StatusId == 1)</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Warranty Expiring</h6>
                    <h3 class="fw-bold text-warning">@Model.Count(a => a.WarrantyExpirationDate.HasValue && a.WarrantyExpirationDate.Value <= DateTime.Now.AddMonths(3))</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Total Value</h6>
                    <h3 class="fw-bold text-info">@Model.Sum(a => a.PurchasePrice ?? 0).ToString("C")</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search assets...">
                </div>
                <div class="col-md-3">
                    <select id="typeFilter" class="form-select">
                        <option value="">All Types</option>
                        <option value="laptop">Laptop</option>
                        <option value="desktop">Desktop</option>
                        <option value="server">Server</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                        <option value="maintenance">Maintenance</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-secondary w-100" onclick="resetFilters()">
                        <i class="bi bi-arrow-clockwise me-2"></i>Reset
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Assets Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="assetsTable">
                    <thead class="bg-light">
                        <tr>
                            <th class="px-4">Asset Info</th>
                            <th>Type</th>
                            <th>Specifications</th>
                            <th>Peripherals</th>
                            <th>Purchase Info</th>
                            <th>Warranty</th>
                            <th>Location</th>
                            <th>Status</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="px-4">
                                    <div class="fw-bold">@item.ComputerName</div>
                                    <small class="text-muted">
                                        <i class="bi bi-person me-1"></i>@item.UserName
                                    </small><br />
                                    <small class="text-muted">
                                        <i class="bi bi-hash me-1"></i>@item.SerialNumber
                                    </small>
                                </td>
                                <td>
                                    <span class="badge bg-primary">@item.hdAssetTypes?.TypeID</span>
                                    <div class="small text-muted mt-1">@item.Manufacturer</div>
                                    <div class="small text-muted">@item.Model</div>
                                </td>
                                <td>
                                    <div class="small">
                                        <strong>CPU:</strong> @item.Processor<br />
                                        <strong>RAM:</strong> @item.RAM<br />
                                        <strong>Storage:</strong> @item.Storage<br />
                                        <strong>OS:</strong> @item.OS
                                    </div>
                                </td>
                                <td>
                                    <div class="small">
                                        @if (!string.IsNullOrEmpty(item.Monitor))
                                        {
                                            <div><i class="bi bi-display me-1"></i>@item.Monitor</div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.Printer))
                                        {
                                            <div><i class="bi bi-printer me-1"></i>@item.Printer</div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="small">
                                        <strong>Date:</strong> @item.PurchaseDate.ToString("MMM dd, yyyy")<br />
                                        <strong>Price:</strong> @item.PurchasePrice?.ToString("C")<br />
                                        <strong>Supplier:</strong> @item.Supplier
                                    </div>
                                </td>
                                <td>
                                    @if (item.WarrantyExpirationDate.HasValue)
                                    {
                                        var daysLeft = (item.WarrantyExpirationDate.Value - DateTime.Now).Days;
                                        var badgeClass = daysLeft <= 90 ? "bg-danger" : daysLeft <= 180 ? "bg-warning" : "bg-success";
                                        <span class="badge @badgeClass">
                                            @item.WarrantyExpirationDate?.ToString("MMM dd, yyyy")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    <i class="bi bi-geo-alt me-1"></i>@item.Location
                                </td>
                                <td>
                                    @{
                                        var statusBadge = item.Status?.StatusId switch
                                        {
                                            1 => "bg-success",
                                            2 => "bg-danger",
                                            3 => "bg-warning",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @statusBadge">
                                        Status @item.Status?.StatusId
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@item.AssetID"
                                           class="btn btn-outline-info" title="Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-controller="AssetHistories" asp-action="AssetHistory" asp-route-assetId="@item.AssetID"
                                           class="btn btn-outline-success" title="View History">
                                            <i class="bi bi-clock-history"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.AssetID"
                                           class="btn btn-outline-primary" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.AssetID"
                                           class="btn btn-outline-danger" title="Delete"
                                           onclick="return confirm('Are you sure you want to delete this asset?')">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Last Updated Info -->
    <div class="mt-3 text-muted small">
        <i class="bi bi-info-circle me-1"></i>
        Showing @Model.Count() assets
    </div>
</div>

@section Scripts {
    <style>
        .card {
            transition: transform 0.2s;
        }

            .card:hover {
                transform: translateY(-2px);
            }

        .table tbody tr {
            transition: background-color 0.2s;
        }

            .table tbody tr:hover {
                background-color: rgba(0, 123, 255, 0.05);
            }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>

    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const table = document.getElementById('assetsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let row of rows) {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchValue) ? '' : 'none';
            }
        });

        // Reset filters
        function resetFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('typeFilter').value = '';
            document.getElementById('statusFilter').value = '';

            const rows = document.getElementById('assetsTable')
                .getElementsByTagName('tbody')[0]
                .getElementsByTagName('tr');

            for (let row of rows) {
                row.style.display = '';
            }
        }

        // Add hover effect to rows
        document.querySelectorAll('#assetsTable tbody tr').forEach(row => {
            row.style.cursor = 'pointer';
        });
    </script>
}