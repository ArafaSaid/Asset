@model Asset.Models.hdAssets

@{
    ViewData["Title"] = "Delete Asset";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="Index">Assets</a></li>
                    <li class="breadcrumb-item"><a asp-action="Details" asp-route-id="@Model.AssetID">@Model.ComputerName</a></li>
                    <li class="breadcrumb-item active">Delete</li>
                </ol>
            </nav>
        </div>
    </div>

    <!-- Warning Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="alert alert-danger border-0 shadow-sm" role="alert">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <i class="bi bi-exclamation-triangle-fill fs-1"></i>
                    </div>
                    <div class="flex-grow-1">
                        <h4 class="alert-heading mb-2">
                            <i class="bi bi-trash me-2"></i>Confirm Asset Deletion
                        </h4>
                        <p class="mb-0">
                            You are about to permanently delete this asset. This action <strong>cannot be undone</strong>.
                            Please review the information below carefully before proceeding.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Asset Summary Card -->
    <div class="card border-danger shadow-sm mb-4">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0">
                <i class="bi bi-laptop me-2"></i>Asset to be Deleted: <strong>@Model.ComputerName</strong>
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-5 text-muted">Computer Name</dt>
                        <dd class="col-sm-7 fw-bold text-danger">@Model.ComputerName</dd>

                        <dt class="col-sm-5 text-muted">Serial Number</dt>
                        <dd class="col-sm-7">
                            <code class="bg-light px-2 py-1 rounded">@Model.SerialNumber</code>
                        </dd>

                        <dt class="col-sm-5 text-muted">Assigned User</dt>
                        <dd class="col-sm-7">
                            <i class="bi bi-person me-1"></i>@Model.UserName
                        </dd>

                        <dt class="col-sm-5 text-muted">Asset Type</dt>
                        <dd class="col-sm-7">
                            <span class="badge bg-primary">@Model.hdAssetTypes?.Name</span>
                        </dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-5 text-muted">Manufacturer</dt>
                        <dd class="col-sm-7">@Model.Manufacturer</dd>

                        <dt class="col-sm-5 text-muted">Model</dt>
                        <dd class="col-sm-7">@Model.Model</dd>

                        <dt class="col-sm-5 text-muted">Location</dt>
                        <dd class="col-sm-7">
                            <i class="bi bi-geo-alt me-1"></i>@Model.Location
                        </dd>

                        <dt class="col-sm-5 text-muted">Purchase Price</dt>
                        <dd class="col-sm-7">
                            @if (Model.PurchasePrice.HasValue)
                            {
                                <span class="fw-bold text-success">@Model.PurchasePrice.Value.ToString("C")</span>
                            }
                            else
                            {
                                <span class="text-muted">Not recorded</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Detailed Information -->
        <div class="col-lg-6">
            <!-- Technical Details -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="bi bi-cpu me-2"></i>Technical Specifications</h6>
                </div>
                <div class="card-body">
                    <dl class="row small mb-0">
                        <dt class="col-sm-4 text-muted">Processor</dt>
                        <dd class="col-sm-8">@(Model.Processor ?? "N/A")</dd>

                        <dt class="col-sm-4 text-muted">RAM</dt>
                        <dd class="col-sm-8">@(Model.RAM ?? "N/A")</dd>

                        <dt class="col-sm-4 text-muted">Storage</dt>
                        <dd class="col-sm-8">@(Model.Storage ?? "N/A")</dd>

                        <dt class="col-sm-4 text-muted">Operating System</dt>
                        <dd class="col-sm-8">@(Model.OS ?? "N/A")</dd>

                        <dt class="col-sm-4 text-muted">Monitor</dt>
                        <dd class="col-sm-8">@(Model.Monitor ?? "None")</dd>

                        <dt class="col-sm-4 text-muted">Printer</dt>
                        <dd class="col-sm-8">@(Model.Printer ?? "None")</dd>
                    </dl>
                </div>
            </div>

            <!-- Purchase Information -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="bi bi-cart me-2"></i>Purchase & Warranty</h6>
                </div>
                <div class="card-body">
                    <dl class="row small mb-0">
                        <dt class="col-sm-5 text-muted">Purchase Date</dt>
                        <dd class="col-sm-7">
                            @if (Model.PurchaseDate != null)
                            {
                                @Model.PurchaseDate.ToString("MMMM dd, yyyy")
                            }
                            else
                            {
                                <span class="text-muted">Not recorded</span>
                            }
                        </dd>

                        <dt class="col-sm-5 text-muted">Supplier</dt>
                        <dd class="col-sm-7">@(Model.Supplier ?? "N/A")</dd>

                        <dt class="col-sm-5 text-muted">Warranty Expiration</dt>
                        <dd class="col-sm-7">
                            @if (Model.WarrantyExpirationDate.HasValue)
                            {
                                var daysLeft = (Model.WarrantyExpirationDate.Value - DateTime.Now).Days;
                                var badgeClass = daysLeft <= 0 ? "bg-danger" : daysLeft <= 90 ? "bg-warning" : "bg-success";
                                <span class="badge @badgeClass">
                                    @Model.WarrantyExpirationDate.Value.ToString("MMM dd, yyyy")
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        <!-- Right Column - Warning & Actions -->
        <div class="col-lg-6">
            <!-- Impact Warning -->
            <div class="card border-warning shadow-sm mb-4">
                <div class="card-header bg-warning text-dark">
                    <h6 class="mb-0"><i class="bi bi-exclamation-triangle me-2"></i>What will be deleted?</h6>
                </div>
                <div class="card-body">
                    <ul class="mb-0">
                        <li>All asset information and specifications</li>
                        <li>Purchase and warranty records</li>
                        <li>Assignment history to user <strong>@Model.UserName</strong></li>
                        <li>Location tracking at <strong>@Model.Location</strong></li>
                        <li>Associated audit trail and timestamps</li>
                    </ul>
                    <div class="alert alert-warning mt-3 mb-0">
                        <small>
                            <i class="bi bi-info-circle me-1"></i>
                            <strong>Note:</strong> Consider archiving instead of deleting if you need to maintain historical records.
                        </small>
                    </div>
                </div>
            </div>

            <!-- Audit Information -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="bi bi-clock-history me-2"></i>Record History</h6>
                </div>
                <div class="card-body">
                    <dl class="row small mb-0">
                        <dt class="col-sm-4 text-muted">Created</dt>
                        <dd class="col-sm-8">
                            @Model.CreatedAt.ToString("MMM dd, yyyy")
                            <br />
                            <small class="text-muted">by @Model.CreatedBy</small>
                        </dd>

                        <dt class="col-sm-4 text-muted">Last Updated</dt>
                        <dd class="col-sm-8">
                            @if (Model.UpdatedAt.HasValue)
                            {
                                @Model.UpdatedAt.Value.ToString("MMM dd, yyyy")
                                <br />
                                <small class="text-muted">by @Model.UpdatedBy</small>
                            }
                            else
                            {
                                <span class="text-muted">Never updated</span>
                            }
                        </dd>

                        <dt class="col-sm-4 text-muted">Status</dt>
                        <dd class="col-sm-8">
                            @{
                                var statusBadge = Model.Status?.StatusId switch
                                {
                                    1 => "bg-success",
                                    2 => "bg-danger",
                                    3 => "bg-warning",
                                    _ => "bg-secondary"
                                };
                            }
                            <span class="badge @statusBadge">@Model.Status?.Name</span>
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Confirmation Checklist -->
            <div class="card border-danger shadow-sm mb-4">
                <div class="card-header bg-danger text-white">
                    <h6 class="mb-0"><i class="bi bi-check2-square me-2"></i>Deletion Checklist</h6>
                </div>
                <div class="card-body">
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" id="confirm1">
                        <label class="form-check-label small" for="confirm1">
                            I have verified the asset information above
                        </label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" id="confirm2">
                        <label class="form-check-label small" for="confirm2">
                            I understand this action cannot be undone
                        </label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="confirm3">
                        <label class="form-check-label small" for="confirm3">
                            I have authorization to delete this asset
                        </label>
                    </div>
                    <div class="alert alert-danger mb-0 small">
                        <i class="bi bi-shield-x me-1"></i>
                        All checkboxes must be selected to enable deletion.
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <form asp-action="Delete" id="deleteForm">
                        <input type="hidden" asp-for="AssetID" />
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <a asp-action="Details" asp-route-id="@Model.AssetID" class="btn btn-outline-info">
                                    <i class="bi bi-eye me-2"></i>View Full Details
                                </a>
                                <a asp-action="Edit" asp-route-id="@Model.AssetID" class="btn btn-outline-primary">
                                    <i class="bi bi-pencil me-2"></i>Edit Instead
                                </a>
                            </div>
                            <div>
                                <a asp-action="Index" class="btn btn-outline-secondary btn-lg me-2">
                                    <i class="bi bi-arrow-left me-2"></i>Cancel & Go Back
                                </a>
                                <button type="submit" class="btn btn-danger btn-lg" id="deleteButton" disabled>
                                    <i class="bi bi-trash me-2"></i>Permanently Delete Asset
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .card {
            transition: transform 0.2s;
        }

            .card:hover {
                transform: translateY(-2px);
            }

        #deleteButton:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        .form-check-input:checked {
            background-color: #dc3545;
            border-color: #dc3545;
        }
    </style>

    <script>
        // Enable delete button only when all checkboxes are checked
        const checkboxes = document.querySelectorAll('.form-check-input');
        const deleteButton = document.getElementById('deleteButton');
        const deleteForm = document.getElementById('deleteForm');

        function updateDeleteButton() {
            const allChecked = Array.from(checkboxes).every(cb => cb.checked);
            deleteButton.disabled = !allChecked;

            if (allChecked) {
                deleteButton.classList.add('pulse-animation');
            } else {
                deleteButton.classList.remove('pulse-animation');
            }
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateDeleteButton);
        });

        // Final confirmation on submit
        deleteForm.addEventListener('submit', function(e) {
            e.preventDefault();

            const assetName = '@Model.ComputerName';
            const confirmation = confirm(
                `⚠️ FINAL WARNING ⚠️\n\n` +
                `You are about to permanently delete:\n` +
                `Asset: ${assetName}\n` +
                `Serial: @Model.SerialNumber\n\n` +
                `This action CANNOT be undone!\n\n` +
                `Type the asset name to confirm deletion.`
            );

            if (confirmation) {
                const userInput = prompt(`Please type "${assetName}" to confirm:`);
                if (userInput === assetName) {
                    // Show loading state
                    deleteButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Deleting...';
                    deleteButton.disabled = true;
                    this.submit();
                } else {
                    alert('Asset name did not match. Deletion cancelled.');
                }
            }
        });

        // Warn if user tries to leave page
        window.addEventListener('beforeunload', function(e) {
            const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
            if (anyChecked) {
                e.preventDefault();
                e.returnValue = '';
                return '';
            }
        });
    </script>
}