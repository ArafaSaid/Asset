// <auto-generated />
using System;
using Asset.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Asset.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251016085746_UpdateHistory")]
    partial class UpdateHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Asset.Models.AssetActionType", b =>
                {
                    b.Property<int>("ActionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionTypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionTypeId");

                    b.ToTable("AssetActionTypes");

                    b.HasData(
                        new
                        {
                            ActionTypeId = 1,
                            Description = "Asset maintenance performed",
                            Name = "Maintenance"
                        },
                        new
                        {
                            ActionTypeId = 2,
                            Description = "Asset assigned to a different user",
                            Name = "User Change"
                        },
                        new
                        {
                            ActionTypeId = 3,
                            Description = "Replaced a part of the asset",
                            Name = "Spare Part Replacement"
                        },
                        new
                        {
                            ActionTypeId = 4,
                            Description = "New asset assignment",
                            Name = "Assignment"
                        });
                });

            modelBuilder.Entity("Asset.Models.AssetStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("AssetStatuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Description = "Asset currently in use",
                            Name = "Active"
                        },
                        new
                        {
                            StatusId = 2,
                            Description = "Not in use but available",
                            Name = "Inactive"
                        },
                        new
                        {
                            StatusId = 3,
                            Description = "Asset under repair or servicing",
                            Name = "Under Maintenance"
                        },
                        new
                        {
                            StatusId = 4,
                            Description = "No longer in service",
                            Name = "Retired"
                        });
                });

            modelBuilder.Entity("Asset.Models.hdAssetHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedToUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AttachmentPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FromLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("FromStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FromUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PerformedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReturnReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SparePart")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SparePartSerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ToLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ToStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ToUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HistoryID");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("AssetID");

                    b.HasIndex("FromStatusId");

                    b.HasIndex("ToStatusId");

                    b.ToTable("AssetHistories");
                });

            modelBuilder.Entity("Asset.Models.hdAssetTypes", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeID");

                    b.ToTable("AssetTypes");

                    b.HasData(
                        new
                        {
                            TypeID = 1,
                            Name = "Laptop"
                        },
                        new
                        {
                            TypeID = 2,
                            Name = "DeskTop"
                        },
                        new
                        {
                            TypeID = 3,
                            Name = "Server"
                        });
                });

            modelBuilder.Entity("Asset.Models.hdAssets", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetID"));

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monitor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Printer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("WarrantyExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssetID");

                    b.HasIndex("ComputerName");

                    b.HasIndex("SerialNumber");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Asset.Models.hdAssetHistory", b =>
                {
                    b.HasOne("Asset.Models.AssetActionType", "ActionType")
                        .WithMany("Histories")
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Asset.Models.hdAssets", "Asset")
                        .WithMany("History")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Asset.Models.AssetStatus", "FromStatus")
                        .WithMany()
                        .HasForeignKey("FromStatusId");

                    b.HasOne("Asset.Models.AssetStatus", "ToStatus")
                        .WithMany()
                        .HasForeignKey("ToStatusId");

                    b.Navigation("ActionType");

                    b.Navigation("Asset");

                    b.Navigation("FromStatus");

                    b.Navigation("ToStatus");
                });

            modelBuilder.Entity("Asset.Models.hdAssets", b =>
                {
                    b.HasOne("Asset.Models.AssetStatus", "Status")
                        .WithMany("Assets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Asset.Models.hdAssetTypes", "hdAssetTypes")
                        .WithMany("Assets")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Status");

                    b.Navigation("hdAssetTypes");
                });

            modelBuilder.Entity("Asset.Models.AssetActionType", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("Asset.Models.AssetStatus", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Asset.Models.hdAssetTypes", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Asset.Models.hdAssets", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
